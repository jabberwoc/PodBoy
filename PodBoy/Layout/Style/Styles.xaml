<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:entity="clr-namespace:PodBoy.Entity"
                    xmlns:view="clr-namespace:PodBoy.View"
                    xmlns:control="clr-namespace:PodBoy.Resource.Control"
                    xmlns:trigger="clr-namespace:PodBoy.Trigger"
                    xmlns:mui="http://firstfloorsoftware.com/ModernUI"
                    xmlns:reactiveUi="clr-namespace:ReactiveUI;assembly=ReactiveUI"
                    xmlns:behavior="clr-namespace:PodBoy.Behavior"
                    xmlns:attached="clr-namespace:PodBoy.Attached"
                    xmlns:playlists="clr-namespace:PodBoy.Playlists">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Converters.xaml" />
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
        <ResourceDictionary Source="Image.xaml" />
        <ResourceDictionary Source="ModernDialog.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ViewHostBorder" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource WhiteColorBrush}" />
        <Setter Property="BorderThickness" Value="0,1,0,0" />
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource WhiteColorBrush}" />
    </Style>

    <Style x:Key="PlayerPanelStyle" TargetType="{x:Type Grid}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="DockPanel.Dock" Value="Top" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="ChannelHeaderIconStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="Height" Value="25" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <Style x:Key="IconStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <Style x:Key="SearchButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="5,0,10,0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource SearchToggleIconTemplate}" />
    </Style>

    <Style x:Key="SortOrderButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource SortOrderIconTemplate}" />
    </Style>


    <Style x:Key="EpisodeItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=OneWayToSource}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Border x:Name="ItemBorder" Background="{TemplateBinding Background}" />
                        <ContentPresenter Margin="0" Grid.Row="0"
                                          VerticalAlignment="Top" />
                        <Separator x:Name="Seppl" VerticalAlignment="Bottom" Grid.Row="0"
                                   Background="{StaticResource LightGrayBrush}"
                                   Margin="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBorder" Property="BorderThickness" Value="1,1,1,2" />
                            <Setter TargetName="ItemBorder" Property="BorderBrush"
                                    Value="{StaticResource AccentColorBrush}" />
                            <Setter Property="Background"
                                    Value="{StaticResource LightGrayBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource LightGrayBrush}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsActive}" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter TargetName="ItemBorder" Property="BorderBrush"
                                    Value="{StaticResource AccentColorBrush}" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="0" To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlaylistItemItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="IsSelected" Value="{Binding Item.IsSelected,Mode=OneWayToSource}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Border x:Name="ItemBorder" Background="{TemplateBinding Background}" />
                        <ContentPresenter Margin="0" Grid.Row="0"
                                          VerticalAlignment="Top" />
                        <Separator x:Name="Seppl" VerticalAlignment="Bottom" Grid.Row="0"
                                   Background="{StaticResource LightGrayBrush}"
                                   Margin="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBorder" Property="BorderThickness" Value="1" />
                            <Setter TargetName="ItemBorder" Property="BorderBrush"
                                    Value="{StaticResource AccentColorBrush}" />
                            <Setter Property="Background"
                                    Value="{StaticResource LightGrayBrush}" />
                            <Setter TargetName="Seppl" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource LightGrayBrush}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsActive}" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter TargetName="ItemBorder" Property="BorderBrush"
                                    Value="{StaticResource AccentColorBrush}" />
                            <Setter TargetName="Seppl" Property="Visibility" Value="Collapsed" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="0" To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UnplayedEpisodesBorder" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,0,0,2" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="DragDropItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="ItemContainerBorder" AllowDrop="True" Background="Transparent">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="DropAreaTop" VerticalAlignment="Top" Visibility="Collapsed"
                                       Height="{Binding ElementName=ItemContentContainer, Path=ActualHeight}"
                                       Grid.Row="0"
                                       Fill="{StaticResource GrayBrush}" />

                            <Grid x:Name="ItemContentContainer" Grid.Row="1">
                                <Border Background="{TemplateBinding Background}" />
                                <ContentPresenter Margin="0"
                                                  VerticalAlignment="Top" />
                                <Separator Grid.Row="0" VerticalAlignment="Bottom"
                                           Background="{StaticResource LightGrayBrush}"
                                           Margin="0" />
                            </Grid>
                            <Rectangle x:Name="DropAreaBottom" VerticalAlignment="Bottom" Visibility="Collapsed"
                                       Height="{Binding ElementName=ItemContentContainer, Path=ActualHeight}"
                                       Grid.Row="2"
                                       Fill="{StaticResource GrayBrush}" />

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LightGrayBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource LightGrayBrush}" />
                        </Trigger>

                        <Trigger SourceName="DropAreaTop" Property="Visibility" Value="Visible">
                            <Trigger.Setters>
                                <Setter TargetName="DropAreaBottom" Property="Visibility" Value="Collapsed" />
                            </Trigger.Setters>
                        </Trigger>

                        <Trigger SourceName="DropAreaBottom" Property="Visibility" Value="Visible">
                            <Trigger.Setters>
                                <Setter TargetName="DropAreaTop" Property="Visibility" Value="Collapsed" />
                            </Trigger.Setters>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="PodImageStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template" Value="{StaticResource PodImageTemplate}" />
    </Style>
    <Style x:Key="EpisodePodImageStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template" Value="{StaticResource EpisodePodImageTemplate}" />
    </Style>
    <Style x:Key="PlaylistItemPodImageStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template" Value="{StaticResource PlaylistItemPodImageTemplate}" />
    </Style>

    <DataTemplate x:Key="PlaylistMenuTemplate" DataType="{x:Type playlists:Playlist}">
        <Grid HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="Shared" />
            </Grid.ColumnDefinitions>

            <TextBlock Text="{Binding Name}" Grid.Column="0" HorizontalAlignment="Left" Margin="0,0,30,0" />

            <Border x:Name="ItemsCountBorder" Grid.Column="1" Margin="0,-2,-7,-2" HorizontalAlignment="Stretch"
                    Background="{StaticResource AccentColorBrush}">
                <TextBlock Text="{Binding ItemsCount}" Foreground="White" Margin="5,0" HorizontalAlignment="Right" />
            </Border>
        </Grid>
    </DataTemplate>

    <Style x:Key="PlaylistMenuStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Margin="-15,0,-55,0" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate" Value="{StaticResource PlaylistMenuTemplate}" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type MenuItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Command"
                            Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.Tag.AddToPlaylist}" />
                    <Setter Property="CommandParameter" Value="{Binding}" />
                </Style>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="EpisodeListStyle" TargetType="{x:Type ListBox}">
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="-1" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource EpisodeItemContainerStyle}" />
        <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type entity:Episode}">
                    <ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch">
                        <Grid x:Name="ItemContainerGrid" HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch" Background="Transparent"
                              Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type view:PodcastView}}, Path=ViewModel}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50" />
                            </Grid.RowDefinitions>

                            <ContentControl x:Name="Image" Grid.Column="0" Padding="5,0,5,0"
                                            Style="{DynamicResource EpisodePodImageStyle}" />

                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0" VerticalAlignment="Center" Height="40">
                                    <TextBlock x:Name="ChannelTitle" Text="{Binding Channel.Title}"
                                               HorizontalAlignment="Left" Style="{StaticResource ChannelInfo}" />

                                    <TextBlock
                                        Text="{Binding Title}" TextTrimming="WordEllipsis"
                                        Style="{StaticResource EpisodeInfo}"
                                        TextWrapping="NoWrap"
                                        HorizontalAlignment="Left" />
                                </StackPanel>

                                <Grid Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Right">
                                    <Ellipse x:Name="PlayedIndicator" Grid.Column="0" Width="10" Height="10"
                                             Stroke="{DynamicResource AccentColorBrush}"

                                             VerticalAlignment="Center"
                                             Visibility="{Binding IsPlayed, FallbackValue=Collapsed, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                                             ToolTip="not played" />

                                    <ContentControl Width="16"
                                                    Visibility="{Binding IsActive,FallbackValue=Collapsed, Converter={StaticResource InverseBooleanToVisibilityConverter}, Mode=OneWay}"
                                                    Template="{DynamicResource PlayingIconTemplate}" ToolTip="playing" />
                                </Grid>

                                <TextBlock
                                    Text="{Binding Date, Converter={StaticResource HumanizeConverter}}"
                                    Grid.Column="1" Margin="0,0,5,0"
                                    Style="{StaticResource EpisodeInfo}" VerticalAlignment="Center"
                                    HorizontalAlignment="Stretch" />
                            </Grid>
                            <Grid.ContextMenu>
                                <ContextMenu Padding="0">
                                    <MenuItem Header="Add to playlist"
                                              ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.Tag.Playlists}"
                                              Style="{StaticResource PlaylistMenuStyle}" />
                                </ContextMenu>
                            </Grid.ContextMenu>
                        </Grid>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type view:IViewWithPlayableViewModel}}, Path=PlayableViewModel.PlayItemCommand}"
                                    CommandParameter="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlaylistItemsStyle" TargetType="{x:Type ListBox}">
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="-1" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource PlaylistItemItemContainerStyle}" />
        <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type playlists:PlaylistItem}">
                    <ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch">
                        <Grid x:Name="ItemContainerGrid" HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch" Background="Transparent"
                              Tag="{Binding RelativeSource={RelativeSource AncestorType=reactiveUi:IViewFor}, Path=ViewModel}">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50" />
                            </Grid.RowDefinitions>

                            <ContentControl x:Name="OrderNumberWrapper" Grid.Column="0" Grid.Row="0">
                                <TextBox x:Name="OrderNumberTextBox" Text="{Binding OrderNumber, Mode=OneWay}"
                                         Style="{StaticResource PlaylistOrderStyle}">
                                    <i:Interaction.Behaviors>
                                        <behavior:ActivatedTextBoxBehavior x:Name="ActivatedTextBoxBehavior"
                                                                           Parent="{Binding ElementName=OrderNumberWrapper}" />
                                        <behavior:PlaylistItemOrderTextBoxBehavior
                                            x:Name="PlaylistItemOrderTextBoxBehavior"
                                            Item="{Binding}"
                                            ListManager="{Binding RelativeSource={RelativeSource AncestorType=reactiveUi:IViewFor}, Path=ViewModel}" />
                                    </i:Interaction.Behaviors>
                                </TextBox>
                            </ContentControl>


                            <ContentControl x:Name="Image" Grid.Column="1" Padding="5,0,5,0"
                                            Style="{DynamicResource PlaylistItemPodImageStyle}" />


                            <Grid Grid.Column="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0" VerticalAlignment="Center" Height="40">
                                    <TextBlock x:Name="ChannelTitle" Text="{Binding Item.Channel.Title}"
                                               HorizontalAlignment="Left" Style="{StaticResource ChannelInfo}" />

                                    <TextBlock
                                        Text="{Binding Item.Title}" TextTrimming="WordEllipsis"
                                        Style="{StaticResource EpisodeInfo}"
                                        TextWrapping="NoWrap"
                                        HorizontalAlignment="Left" />
                                </StackPanel>

                                <Grid Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Right">
                                    <Ellipse x:Name="PlayedIndicator" Grid.Column="0" Width="10" Height="10"
                                             Stroke="{DynamicResource AccentColorBrush}"

                                             VerticalAlignment="Center"
                                             Visibility="{Binding Item.IsPlayed, FallbackValue=Collapsed, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                                             ToolTip="not played" />

                                    <ContentControl Width="16"
                                                    Visibility="{Binding IsActive,FallbackValue=Collapsed, Converter={StaticResource InverseBooleanToVisibilityConverter}, Mode=OneWay}"
                                                    Template="{DynamicResource PlayingIconTemplate}" ToolTip="playing" />
                                </Grid>

                                <TextBlock
                                    Text="{Binding Item.Date, Converter={StaticResource HumanizeConverter}}"
                                    Grid.Column="1" Margin="0,0,5,0"
                                    Style="{StaticResource EpisodeInfo}" VerticalAlignment="Center"
                                    HorizontalAlignment="Stretch" />
                            </Grid>
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Add to Playlist"
                                              ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.Tag.Playlists}">
                                        <MenuItem.ItemContainerStyle>
                                            <Style TargetType="{x:Type MenuItem}">
                                                <Setter Property="Command"
                                                        Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.Tag.AddToPlaylist}" />
                                                <Setter Property="CommandParameter" Value="{Binding}" />
                                            </Style>
                                        </MenuItem.ItemContainerStyle>
                                    </MenuItem>
                                    <MenuItem Header="Remove"
                                              Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.Tag.RemoveFromPlaylist}" />
                                </ContextMenu>
                            </Grid.ContextMenu>
                        </Grid>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type view:IViewWithPlayableViewModel}}, Path=PlayableViewModel.PlayItemCommand}"
                                    CommandParameter="{Binding}"
                                    IsEnabled="{Binding ElementName=OrderNumberTextBox,Path=IsEnabled,Converter={StaticResource NegatingConverter}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ContentControl>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsActive}" Value="True">
                            <Setter TargetName="OrderNumberTextBox" Property="Background"
                                    Value="{StaticResource AccentColorBrush}" />
                            <Setter TargetName="OrderNumberTextBox" Property="Foreground" Value="White" />
                        </DataTrigger>

                        <Trigger SourceName="OrderNumberWrapper" Property="IsMouseOver" Value="True">
                            <Setter TargetName="OrderNumberTextBox" Property="Background"
                                    Value="{StaticResource WhiteColorBrush}" />
                            <Setter TargetName="OrderNumberTextBox" Property="Foreground"
                                    Value="{StaticResource AccentColorBrush}" />
                            <Setter TargetName="OrderNumberTextBox" Property="BorderThickness"
                                    Value="1" />
                        </Trigger>
                        <Trigger SourceName="OrderNumberTextBox" Property="IsEnabled" Value="True">
                            <Setter TargetName="OrderNumberTextBox" Property="Background"
                                    Value="{StaticResource WhiteColorBrush}" />
                            <Setter TargetName="OrderNumberTextBox" Property="Foreground"
                                    Value="{StaticResource AccentColorBrush}" />
                            <Setter TargetName="OrderNumberTextBox" Property="BorderThickness"
                                    Value="1" />
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeleteButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Background" Value="{StaticResource DarkerGrayBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PastellRedBrush}" />
        <Setter Property="Template" Value="{StaticResource DeleteIconTemplate}" />
    </Style>

    <DataTemplate x:Key="ChannelItemDataTemplate" DataType="{x:Type entity:Channel}">
        <Grid Height="50" HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Tag="{Binding RelativeSource={RelativeSource AncestorType=view:PodcastView}, Path=ViewModel}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ContentControl x:Name="Image" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Style="{DynamicResource PodImageStyle}" />

            <TextBlock Text="{Binding Title}" TextTrimming="WordEllipsis" Grid.Column="1"
                       Style="{StaticResource ChannelTitleThumb}" HorizontalAlignment="Stretch" />

            <Button x:Name="DeleteButton" Grid.Column="0" Margin="6,0,0,2"
                    Style="{StaticResource DeleteButtonStyle}"
                    HorizontalAlignment="Left" VerticalAlignment="Bottom">
                <i:Interaction.Triggers>
                    <trigger:HandlingEventTrigger EventName="PreviewMouseLeftButtonUp">
                        <i:InvokeCommandAction
                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type view:PodcastView}}, Path=ViewModel.ConfirmDeleteChannelCommand}"
                            CommandParameter="{Binding}" />
                    </trigger:HandlingEventTrigger>
                </i:Interaction.Triggers>
            </Button>

            <Border x:Name="UnplayedBorder" Grid.Column="1" HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    Style="{StaticResource UnplayedEpisodesBorder}" Visibility="Collapsed">
                <TextBlock x:Name="Unplayed" Text="{Binding UnplayedCount}"
                           Style="{StaticResource UnplayedEpisodesText}" />
            </Border>

            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Mark all played"
                              Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}, Path=PlacementTarget.Tag.MarkAllPlayedCommand}"
                              CommandParameter="{Binding}" />
                    <MenuItem Header="Copy Url"
                              Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CopyUrlCommand}"
                              CommandParameter="{Binding}" />
                </ContextMenu>
            </Grid.ContextMenu>
        </Grid>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="DeleteButton" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger
                Binding="{Binding UnplayedCount, Converter={StaticResource IsGreaterThanZero}}"
                Value="True">
                <Setter TargetName="UnplayedBorder" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="PlaylistItemDataTemplate" DataType="{x:Type playlists:Playlist}">
        <Grid x:Name="root" Height="30" HorizontalAlignment="Stretch" Background="Transparent"
              VerticalAlignment="Stretch"
              Tag="{Binding RelativeSource={RelativeSource AncestorType=view:PlaylistView}, Path=ViewModel}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ContentControl x:Name="Image" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left"
                            VerticalAlignment="Center" BorderThickness="1"
                            Margin="10,8,8,8" Foreground="{StaticResource AccentColorBrush}"
                            Template="{DynamicResource PlaylistIconTemplate}" />


            <ContentControl x:Name="PlaylistNameWrapper" Grid.Column="1">
                <TextBox x:Name="NameTextBox" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Style="{StaticResource PlaylistNameTextBoxStyle}">
                    <i:Interaction.Behaviors>
                        <behavior:ActivatedTextBoxBehavior x:Name="ActivatedTextBoxBehavior"
                                                           Parent="{Binding ElementName=PlaylistNameWrapper}" />
                    </i:Interaction.Behaviors>
                </TextBox>
            </ContentControl>

            <TextBlock x:Name="ItemsCount" Grid.Column="1" Text="{Binding ItemsCount}"
                       HorizontalAlignment="Right"
                       Foreground="{StaticResource DarkerGrayBrush}"
                       Margin="0,0,10,0"
                       Style="{StaticResource UnplayedEpisodesText}" />

            <Button x:Name="DeleteButton" Grid.Column="1"
                    Style="{StaticResource DeleteButtonStyle}"
                    Margin="0,0,6,0"
                    HorizontalAlignment="Right" VerticalAlignment="Center">
                <i:Interaction.Triggers>
                    <trigger:HandlingEventTrigger EventName="PreviewMouseLeftButtonUp">
                        <i:InvokeCommandAction
                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type view:PlaylistView}}, Path=ViewModel.DeletePlaylistCommand}"
                            CommandParameter="{Binding}" />
                    </trigger:HandlingEventTrigger>
                </i:Interaction.Triggers>
            </Button>

            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Mark all played"
                              Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}, Path=PlacementTarget.Tag.MarkAllPlayedCommand}"
                              CommandParameter="{Binding}" />
                    <MenuItem Header="Copy Url"
                              Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CopyUrlCommand}"
                              CommandParameter="{Binding}" />
                </ContextMenu>
            </Grid.ContextMenu>
        </Grid>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="DeleteButton" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger SourceName="NameTextBox" Property="IsEnabled" Value="True">
                <Setter
                    Property="attached:Properties.IsDragDropEnabled"
                    Value="False" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="DragDropListStyle" TargetType="{x:Type ListBox}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DragDropItemContainerStyle}" />
        <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}" />
        <Setter Property="Padding" Value="-1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    </Style>

    <Style x:Key="ChannelListStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource DragDropListStyle}">
        <Setter Property="ItemTemplate" Value="{StaticResource ChannelItemDataTemplate}" />
    </Style>

    <Style x:Key="PlaylistListStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource DragDropListStyle}">
        <Setter Property="ItemTemplate" Value="{StaticResource PlaylistItemDataTemplate}" />
    </Style>

    <Style TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{StaticResource WindowBackground}" />
        <Setter Property="Width" Value="3" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DetailContainerStyle" TargetType="{x:Type view:DetailView}">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{StaticResource WindowBackground}" />
    </Style>


    <Style TargetType="{x:Type FlowDocument}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="TrackControlStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource LightGrayBrush}" />
        <Setter Property="Margin" Value="5,0" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <ContentControl x:Key="ConfirmDeleteContent" Style="{StaticResource DeleteChannelContentStyle}" />

    <Style TargetType="{x:Type control:ConfirmDeleteDialog}" BasedOn="{StaticResource {x:Type mui:ModernDialog}}">
        <Setter Property="Content" Value="{StaticResource ConfirmDeleteContent}" />
    </Style>

    <Style x:Key="EpisodeSortStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="Margin" Value="0,0,100,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="ItemStringFormat" Value="{}{0}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="NavigationBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>

    <ControlTemplate x:Key="DetailsToggleButtonTemplate" TargetType="{x:Type ToggleButton}">

        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <!--<ColumnDefinition Width="1*" />-->
            </Grid.ColumnDefinitions>

            <ContentPresenter Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Right" />


            <Ellipse x:Name="OuterCircle" Grid.Column="1"
                     Fill="{TemplateBinding Background}"
                     Margin="5,5,0,0"
                     Stroke="{TemplateBinding Background}" StrokeThickness="1"
                     Width="21" Height="21"
                     HorizontalAlignment="Center" VerticalAlignment="Center" />

            <Ellipse x:Name="InnerCircle" Grid.Column="1"
                     Fill="{TemplateBinding Background}"
                     Margin="5,5,0,0"
                     Stroke="{DynamicResource AccentColorBrush}" StrokeThickness="1"
                     Width="19" Height="19"
                     HorizontalAlignment="Center" VerticalAlignment="Center" />

            <Path x:Name="Arrow" Grid.Column="1"
                  Data="M 1,1.5 L 4.5,5 8,1.5"
                  Margin="5,5,0,0"
                  Stroke="{DynamicResource AccentColorBrush}" StrokeThickness="2"
                  HorizontalAlignment="Center" VerticalAlignment="Center"
                  RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <RotateTransform Angle="90" />
                </Path.RenderTransform>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="InnerCircle" Property="Stroke" Value="{DynamicResource DarkerGrayBrush}" />
                <Setter TargetName="Arrow" Property="Stroke" Value="{DynamicResource DarkerGrayBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="InnerCircle" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                <Setter TargetName="Arrow" Property="Stroke" Value="White" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                             To="270" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                             To="90" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DetailButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="10,11,5,11" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="Content" Value="Details" />
        <Setter Property="Template" Value="{StaticResource DetailsToggleButtonTemplate}" />
    </Style>


</ResourceDictionary>