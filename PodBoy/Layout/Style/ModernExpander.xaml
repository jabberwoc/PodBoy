<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="MuiExpander" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource ItemText}" />
    </Style>

    <!-- Animated Expander Button's Template-->
    <ControlTemplate x:Key="ExpanderButtonTemplate" TargetType="{x:Type ToggleButton}">

        <!--Margin="-95,0,0,0"-->
        <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-93,0,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <!--<ColumnDefinition Width="1*" />-->
            </Grid.ColumnDefinitions>

            <ContentPresenter Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Right" />

            <!--<Rectangle Grid.ColumnSpan="2" Fill="Transparent" StrokeThickness="0" Grid.Column="0" />-->

            <Ellipse x:Name="OuterCircle" Grid.Column="1"
                     Fill="{TemplateBinding Background}"
                     Margin="5,5,0,0"
                     Stroke="{TemplateBinding Background}" StrokeThickness="1"
                     Width="21" Height="21"
                     HorizontalAlignment="Center" VerticalAlignment="Center" />

            <Ellipse x:Name="InnerCircle" Grid.Column="1"
                     Fill="{TemplateBinding Background}"
                     Margin="5,5,0,0"
                     Stroke="{DynamicResource AccentColorBrush}" StrokeThickness="1"
                     Width="19" Height="19"
                     HorizontalAlignment="Center" VerticalAlignment="Center" />

            <Path x:Name="Arrow" Grid.Column="1"
                  Data="M 1,1.5 L 4.5,5 8,1.5"
                  Margin="5,5,0,0"
                  Stroke="{DynamicResource AccentColorBrush}" StrokeThickness="2"
                  HorizontalAlignment="Center" VerticalAlignment="Center"
                  RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <RotateTransform Angle="90" />
                </Path.RenderTransform>
            </Path>

        </Grid>

        <!-- Animate arrow when toggled, -->
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="InnerCircle" Property="Stroke" Value="{DynamicResource DarkerGrayBrush}" />
                <Setter TargetName="Arrow" Property="Stroke" Value="{DynamicResource DarkerGrayBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="InnerCircle" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                <Setter TargetName="Arrow" Property="Stroke" Value="White" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>

                            <!-- Timer settings, open expander rotates Arrow -->
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                             To="270" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>

                            <!-- Timer settings, close expander rotates Arrow back to original position-->
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                             To="90" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Expands the actual content -->
    <ControlTemplate x:Key="ExpandTheTemplate" TargetType="{x:Type Expander}">

        <Grid VerticalAlignment="Stretch" Background="{TemplateBinding Background}">
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <ToggleButton Content="{TemplateBinding Header}"
                          Foreground="{StaticResource DarkGrayBrush}"
                          FontFamily="{StaticResource DefaultFontFamily}"
                          FontSize="20"
                          Margin="0,5,0,5"
                          VerticalAlignment="Center"

                          Template="{StaticResource ExpanderButtonTemplate}"
                          IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />


            <ContentPresenter x:Name="ExpanderContent" ContentSource="Content" Grid.Row="0" Grid.RowSpan="2"
                              VerticalAlignment="Stretch">
                <ContentPresenter.LayoutTransform>
                    <ScaleTransform ScaleX="0" />
                </ContentPresenter.LayoutTransform>
            </ContentPresenter>
        </Grid>

        <!-- Timer settings for expanding the content -->
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>

                            <!-- Expand out -->
                            <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                             Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleX)"
                                             To="1"
                                             Duration="0:0:0.2" />
                            <!--<DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1" />-->

                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>

                            <!--<DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0" />-->
                            <!-- Shrink in -->
                            <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                             Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleX)"
                                             To="0"
                                             Duration="0:0:0.2" />

                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                <!--<Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible" />-->
            </Trigger>
            <Trigger Property="IsExpanded" Value="False">
                <!--<Setter TargetName="ExpanderContent" Property="Visibility" Value="Collapsed" />-->
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>