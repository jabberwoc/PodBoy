<UserControl x:Class="PodBoy.View.NotificationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:notification="clr-namespace:PodBoy.Notification"
             xmlns:attached="clr-namespace:PodBoy.Attached"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:view="clr-namespace:PodBoy.View"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Layout/Style/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Storyboard x:Key="FadeOut">
                <DoubleAnimationUsingKeyFrames
                    Storyboard.TargetProperty="Width"
                    Duration="0:0:0.4">
                    <LinearDoubleKeyFrame Value="200" KeyTime="0:0:0" />
                    <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.2" />
                    <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.4" />
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>

            <Storyboard x:Key="FadeIn">
                <DoubleAnimation
                    Storyboard.TargetProperty="Width"
                    To="200"
                    Duration="0:0:0.2" />

            </Storyboard>

            <DataTemplate x:Key="NotificationItemTemplate" DataType="{x:Type notification:NotificationElement}">
                <Grid x:Name="NotificationContainer">
                    <Border x:Name="NotificationBorder" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                            CornerRadius="2"
                            BorderThickness="0"
                            Background="{StaticResource AccentColorBrush}" Padding="3,0,2,0">
                        <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="2"
                                BorderThickness="0" Margin="0"
                                Background="{Binding Type, Converter={StaticResource NotificationColorConverter}}">
                            <Grid>
                                <TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Padding="5"
                                           FontSize="16" Text="{Binding Message}"
                                           Foreground="White"
                                           TextWrapping="Wrap" TextAlignment="Center" />
                                <Button x:Name="DeleteButton" Margin="0,5,5,0"
                                        Foreground="{StaticResource DarkGrayBrush}"
                                        Style="{StaticResource DeleteButtonStyle}"
                                        HorizontalAlignment="Right" VerticalAlignment="Top">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <i:InvokeCommandAction
                                                Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type view:NotificationView}}, Path=ViewModel.RemoveNotificationCommand}"
                                                CommandParameter="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>
                        </Border>
                    </Border>
                </Grid>
                <DataTemplate.Triggers>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="DeleteButton" Property="Visibility" Value="Visible" />
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <Style x:Key="NotificationItemContainerStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Height" Value="50" />
                <Setter Property="Opacity" Value="0.9" />
                <Setter Property="Width" Value="0" />
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform x:Name="transform" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <!--<Grid>-->
                            <!--<Border x:Name="ItemBorder" Background="{TemplateBinding Background}" />-->
                            <ContentPresenter x:Name="ContentPresenter" VerticalAlignment="Stretch" Margin="0,0,-3,2"
                                              HorizontalAlignment="Stretch" />
                            <!--</Grid>-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="IsSelected" Value="True" />
                        <Setter Property="Opacity" Value="1" />
                    </Trigger>

                    <DataTrigger Binding="{Binding IsActive}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard Storyboard="{StaticResource FadeIn}" />
                        </DataTrigger.EnterActions>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsFading}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard Storyboard="{StaticResource FadeOut}" />
                        </DataTrigger.EnterActions>
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsFading}" Value="True" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Width}" Value="0" />
                        </MultiDataTrigger.Conditions>

                        <Setter Property="attached:Properties.IsFadeOut" Value="True" />
                        <!--<Setter Property="is"></Setter>-->
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="NotificationsStyle" TargetType="{x:Type ListBox}">
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Padding" Value="-1" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="ItemTemplate" Value="{StaticResource NotificationItemTemplate}" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource NotificationItemContainerStyle}" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>


    <ListBox x:Name="NotificationList"
             Style="{StaticResource NotificationsStyle}" />
</UserControl>